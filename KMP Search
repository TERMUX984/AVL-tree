#include <stdio.h>
#include<stdlib.h>
#include <string.h>

void computeLPSArray(char* pattern, int M, int* LPS) {
    int len = 0; 
    LPS[0] = 0;
    int i = 1;

    while (i < M) {
        if (pattern[i] == pattern[len]) {
            len++;
            LPS[i] = len;
            i++;
        } else {
            if (len != 0) {
                len = LPS[len - 1];
            } else {
                LPS[i] = 0;
                i++;
            }
        }
    }
}

void KMPSearch(char* text, char* pattern) {
    int M = strlen(pattern);
    int N = strlen(text);

    int* LPS = (int*)malloc(sizeof(int) * M);

    computeLPSArray(pattern, M, LPS);

    int i = 0; 
    int j = 0; 

    while (i < N) {
        if (pattern[j] == text[i]) {
            i++;
            j++;
        }

        if (j == M) {
            printf("Pattern found at index %d\n", i - j);
            j = LPS[j - 1];
        } else if (i < N && pattern[j] != text[i]) {
            if (j != 0) {
                j = LPS[j - 1];
            } else {
                i++;
            }
        }
    }

    free(LPS);
}

int main() {
    char text[] = "aaaa";
    char pattern[] = "aa";

    printf("Text: %s\n", text);
    printf("Pattern: %s\n", pattern);

    KMPSearch(text, pattern);

    return 0;
}
